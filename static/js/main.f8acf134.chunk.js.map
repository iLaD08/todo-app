{"version":3,"sources":["components/todo/styles.js","components/todo/index.js","components/todo-form/styles.js","components/todo-form/index.js","components/todo-list/styles.js","components/todo-list/index.js","components/theme-button/style.js","components/theme-button/index.js","App.js","hooks/useTheme.js","index.js"],"names":["TodoDiv","styled","div","TodoButtonsDiv","TodoButtons","button","Todo","todo","index","completeTodo","removeTodo","theme","style","textDecoration","isCompleted","background","color","text","display","onClick","TodoFormInput","input","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","TodoListDiv","Title","h1","TodoEmpty","h2","TodoList","initialvalue","JSON","parse","window","localStorage","getItem","todos","setTodos","useEffect","newTodos","setItem","stringify","splice","length","map","ThemeBtn","ThemeButton","toggleTheme","className","App","setTheme","localTheme","useTheme","document","body","backgroundColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8acf134.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TodoDiv = styled.div`\n    align-items: center;\n    background: #fff;\n    color: #000;\n    border-radius: 3px;\n    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15);\n    display: flex;\n    font-size: 15px;\n    justify-content: space-between;\n    margin-bottom: 6px;\n    padding: 3px 10px;\n`;\n\nexport const TodoButtonsDiv = styled.div``; \n\nexport const TodoButtons = styled.button`\n    background-color: transparent;\n    border: none;\n    outline: none;\n    font-size: 15px;\n`;","import React from \"react\";\nimport { TodoDiv, TodoButtonsDiv, TodoButtons } from \"./styles\";\n\nconst Todo = ({ todo, index, completeTodo, removeTodo, theme }) => (\n        <TodoDiv\n          style={{\n            textDecoration: todo.isCompleted ? \"line-through\" : \"\",\n            background: theme === 'dark' ? '#29284f' : '#fff',\n            color: theme === 'dark' ? '#fff' : '#000' \n          }}\n        >\n          {todo.text}\n          <TodoButtonsDiv>\n            <TodoButtons style={{ display: todo.isCompleted ? \"none\" : \"\" }} onClick={() => completeTodo(index)}>✅</TodoButtons>\n            <TodoButtons onClick={() => removeTodo(index)}>❌</TodoButtons>\n          </TodoButtonsDiv>\n        </TodoDiv>\n);\n\nexport default Todo;","import styled from \"styled-components\";\n\nexport const TodoFormInput = styled.input`\n    background: #bababa;\n    color: #fff;\n    border: none;\n    outline: none;\n    width: 99%;\n`;","import React, { useState } from \"react\";\nimport { TodoFormInput } from \"./styles\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TodoFormInput\n        type=\"text\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nexport default TodoForm;","import styled from \"styled-components\";\n\nexport const TodoListDiv = styled.div`\n    transition: background 0.1s linear;\n    position: absolute;\n    top: 100px;\n    border-radius: 4px;\n    width: 300px;\n    padding: 5px;\n`;\n\nexport const Title = styled.h1`\n    text-align: center;\n`;\n\nexport const TodoEmpty = styled.h2`\n    text-align: center;\n    border-radius: 3px;\n    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15);\n    font-size: 15px;\n    margin-bottom: 6px;\n    padding: 3px 10px;\n`;","import React, { useState, useEffect } from \"react\";\nimport Todo from \"../todo/index\";\nimport TodoForm from \"../todo-form/index\";\nimport { TodoListDiv, Title, TodoEmpty } from \"./styles\";\n\n\nconst TodoList = ({ theme }) => {\n  const initialvalue = JSON.parse(window.localStorage.getItem(\"todos\"));\n\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    initialvalue && setTodos(initialvalue);\n  }, []);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    window.localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    window.localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    window.localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  return (\n    <TodoListDiv\n      style={{\n        background: theme === 'dark' ? '#080729' : '#e8e8e8',\n        color: theme === 'dark' ? '#f7f7ff' : 'gray'\n      }}>\n      <Title>Todo list:</Title>\n      {\n        todos.length ? (\n          todos.map((todo, index) => (\n            <Todo\n              key={index}\n              index={index}\n              todo={todo}\n              completeTodo={completeTodo}\n              removeTodo={removeTodo}\n              theme={theme}\n            />\n          ))\n        ) : (\n          <div>\n            <TodoEmpty\n              style={{\n                background: theme === 'dark' ? '#29284f' : '#fff',\n                color: theme === 'dark' ? '#fff' : '#000'\n              }}\n            >\n              Your todo list is empty.\n          </TodoEmpty>\n          </div>\n        )\n      }\n      <TodoForm addTodo={addTodo} />\n    </TodoListDiv>\n  )\n};\n\nexport default TodoList;","import styled from \"styled-components\";\n\nexport const ThemeBtn = styled.button`\n    background-color: #ffff;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 15px;\n    position: fixed;\n    bottom: 12px;\n    right: 12px;\n    \n`;","import React from \"react\";\nimport { ThemeBtn } from \"./style\"\n\nconst ThemeButton = ({ toggleTheme, theme }) => (\n            <div className=\"theme-button\">\n                 <ThemeBtn \n                 type=\"button\"  \n                 style={{\n                     background: theme === 'dark' ? '#080729' : '#e8e8e8',\n                     color: theme === 'dark' ? '#f7f7ff' : '#000' \n                 }}\n                onClick={toggleTheme}>\n                    Switch theme\n                </ThemeBtn>\n                 \n            </div>\n);\n\nexport default ThemeButton;\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./components/todo-list/index\";\nimport ThemeButton from \"./components/theme-button/index\";\nimport useTheme from \"./hooks/useTheme\";\nimport './App.css';\n  \nconst App = () => {\n    const [theme, toggleTheme] = useTheme();\n    \n    useEffect(() => {\n        document.body.style.backgroundColor = theme === 'dark' ? '#020212' : '#fff';\n    }, [theme]);\n\n return (\n        <div className=\"App\">\n            <div className=\"todoapp\">\n                <TodoList theme={theme}/>\n            </div>\n            <ThemeButton theme={theme} toggleTheme={toggleTheme}/>\n        </div>\n    )\n};\n\nexport default App;\n\n","import { useEffect, useState } from 'react'\n\nexport default () => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      setTheme('dark');\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme('light');\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme) {\n      setTheme(localTheme);\n    }\n  }, [])\n\n  return [theme, toggleTheme];\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}