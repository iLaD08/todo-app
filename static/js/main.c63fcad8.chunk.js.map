{"version":3,"sources":["components/todo/styles.js","components/todo/index.js","components/todo-form/styles.js","components/todo-form/index.js","components/todo-list/styles.js","components/todo-list/index.js","components/theme-button/style.js","components/theme-button/index.js","App.js","hooks/useTheme.js","reportWebVitals.js","index.js"],"names":["TodoDiv","styled","div","TodoButtonsDiv","TodoButtons","button","Todo","todo","index","completeTodo","removeTodo","theme","style","textDecoration","isCompleted","background","color","text","display","onClick","TodoFormInput","input","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","className","onChange","target","TodoListDiv","Title","h1","TodoList","initialvalue","JSON","parse","window","localStorage","getItem","todos","setTodos","useEffect","newTodos","setItem","stringify","splice","map","ThemeBtn","ThemeButton","toggleTheme","App","setTheme","localTheme","useTheme","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c63fcad8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const TodoDiv = styled.div`\r\n    align-items: center;\r\n    background: #fff;\r\n    color: #000;\r\n    border-radius: 3px;\r\n    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15);\r\n    display: flex;\r\n    font-size: 15px;\r\n    justify-content: space-between;\r\n    margin-bottom: 6px;\r\n    padding: 3px 10px;\r\n`;\r\n\r\nexport const TodoButtonsDiv = styled.div``; \r\n\r\nexport const TodoButtons = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 15px;\r\n`;","import React from \"react\";\r\nimport { TodoDiv, TodoButtonsDiv, TodoButtons } from \"./styles\";\r\n\r\nconst Todo = ({ todo, index, completeTodo, removeTodo, theme }) => (\r\n        <TodoDiv\r\n          style={{\r\n            textDecoration: todo.isCompleted ? \"line-through\" : \"\",\r\n            background: theme === 'dark' ? '#29284f' : '#fff',\r\n            color: theme === 'dark' ? '#fff' : '#000' \r\n          }}\r\n        >\r\n          {todo.text}\r\n          <TodoButtonsDiv>\r\n            <TodoButtons style={{ display: todo.isCompleted ? \"none\" : \"\" }} onClick={() => completeTodo(index)}>✅</TodoButtons>\r\n            <TodoButtons onClick={() => removeTodo(index)}>❌</TodoButtons>\r\n          </TodoButtonsDiv>\r\n        </TodoDiv>\r\n);\r\n\r\nexport default Todo;","import styled from \"styled-components\";\r\n\r\nexport const TodoFormInput = styled.input`\r\n    background: #bababa;\r\n    color: #fff;\r\n    border: none;\r\n    outline: none;\r\n    width: 99%;\r\n`;","import React,{ useState } from \"react\";\r\nimport { TodoFormInput } from \"./styles\";\r\n \r\nconst TodoForm = ({ addTodo }) => {\r\n    const [value, setValue] = useState(\"\");\r\n  \r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if (!value) return;\r\n      addTodo(value);\r\n      setValue(\"\");\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <TodoFormInput\r\n          type=\"text\"\r\n          className=\"input\"\r\n          value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\nexport default TodoForm;","import styled from \"styled-components\";\r\n\r\nexport const TodoListDiv = styled.div`\r\n    transition: background 0.1s linear;\r\n    position: absolute;\r\n    top: 100px;\r\n    border-radius: 4px;\r\n    width: 300px;\r\n    padding: 5px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n`;","import React,{ useState, useEffect } from \"react\";\r\nimport Todo from \"../todo/index\";\r\nimport TodoForm from \"../todo-form/index\";\r\nimport { TodoListDiv, Title } from \"./styles\";\r\n\r\n\r\nconst TodoList = ({ theme }) => {\r\n    const initialvalue = JSON.parse(window.localStorage.getItem(\"todos\"));\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n      initialvalue && setTodos(initialvalue);\r\n  }, [initialvalue]);\r\n\r\n    const addTodo = text => {\r\n        const newTodos = [...todos, { text }];\r\n        window.localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const completeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].isCompleted = true;\r\n        window.localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        window.localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n        setTodos(newTodos);\r\n    };\r\n    \r\n    return (\r\n        <TodoListDiv\r\n        style={{\r\n          background: theme === 'dark' ? '#080729' : '#e8e8e8',\r\n          color: theme === 'dark' ? '#f7f7ff' : 'gray' \r\n        }}>\r\n          <Title>Todo list:</Title>\r\n        {todos.map((todo, index) => (\r\n          <Todo\r\n            key={index}\r\n            index={index}\r\n            todo={todo}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            theme={theme}\r\n          />\r\n        ))}\r\n        <TodoForm addTodo={addTodo}/>\r\n      </TodoListDiv>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import styled from \"styled-components\";\r\n\r\nexport const ThemeBtn = styled.button`\r\n    background-color: #ffff;\r\n    border-radius: 10px;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    padding: 15px;\r\n    position: fixed;\r\n    bottom: 12px;\r\n    right: 12px;\r\n    \r\n`;","import React from \"react\";\r\nimport { ThemeBtn } from \"./style\"\r\n\r\nconst ThemeButton = ({ toggleTheme, theme }) => (\r\n            <div className=\"theme-button\">\r\n                 <ThemeBtn \r\n                 type=\"button\"  \r\n                 style={{\r\n                     background: theme === 'dark' ? '#080729' : '#e8e8e8',\r\n                     color: theme === 'dark' ? '#f7f7ff' : '#000' \r\n                 }}\r\n                onClick={toggleTheme}>\r\n                    Switch theme\r\n                </ThemeBtn>\r\n                 \r\n            </div>\r\n);\r\n\r\nexport default ThemeButton;\r\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./components/todo-list/index\";\nimport ThemeButton from \"./components/theme-button/index\";\nimport useTheme from \"./hooks/useTheme\";\nimport './App.css';\n  \nconst App = () => {\n    const [theme, toggleTheme] = useTheme();\n    \n    useEffect(() => {\n        document.body.style.backgroundColor = theme === 'dark' ? '#020212' : '#fff';\n    }, [theme]);\n\n return (\n        <div className=\"App\">\n            <div className=\"todoapp\">\n                <TodoList theme={theme}/>\n            </div>\n            <ThemeButton theme={theme} toggleTheme={toggleTheme}/>\n        </div>\n    )\n};\n\nexport default App;\n\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default () => {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      setTheme('dark');\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      setTheme('light');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme');\r\n    if (localTheme) {\r\n      setTheme(localTheme);\r\n    }\r\n  }, [])\r\n\r\n  return [theme, toggleTheme];\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}